# Available ports:

# 8000 - entry point (nginx)
# 8001 - frontend service
# 8002 - core service
# 8003 - bridge service
# 8005 - synapse service

# 6380 - redis
# 5433 - core db

services:
  redis:
    build: redis
    container_name: redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6380:6379"
    volumes:
      - ./data/redis:/data
    restart: always
    command: ["redis-server", "--requirepass", "$REDIS_PASSWORD"]
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
      interval: 5s
      retries: 5
      start_period: 10s

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 5s
      retries: 5
      start_period: 10s

  core-db:
    image: postgres:latest
    container_name: core-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - ./data/core-db:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      retries: 5
      start_period: 10s

  core:
    build:
      dockerfile: api/Dockerfile
    container_name: core
    env_file:
      - .env
    restart: always
    ports:
      - "8002:80"
    depends_on:
      core-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      nginx:
        condition: service_started

  frontend:
    container_name: frontend
    build: frontend
    ports:
      - "8001:80"

  bridge:
    build:
      dockerfile: bridge/Dockerfile
    container_name: bridge
    env_file:
      - .env
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
      nginx:
        condition: service_started
    restart: always
    environment:
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
    ports:
      - 8003:80

  nginx:
    build:
      dockerfile: server/Dockerfile
    container_name: nginx
    restart: always
    ports:
      - "8000:80"

  synapse:
    image: matrixdotorg/synapse:latest
    container_name: synapse
    restart: always
    environment:
      - SYNAPSE_CONFIG_PATH=/etc/synapse/config/homeserver.yaml
    volumes:
      - ./data/synapse:/data
      - ./synapse/homeserver.yaml:/etc/synapse/config/homeserver.yaml
    depends_on:
      - synapse-db
    ports:
      - 8005:80

  synapse-db:
    image: postgres:latest
    container_name: synapse-db
    environment:
      - POSTGRES_USER=synapse
      - POSTGRES_PASSWORD=synapse     
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - ./data/synapse-db:/var/lib/postgresql/data
